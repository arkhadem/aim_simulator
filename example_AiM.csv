#,AiM,[opcode],[opsize],[GPR_addr_0],[GPR_addr_1],[channel_mask],[bank_index],[row_addr],[col_addr],[Thread_index]
#,R/W,GPR/CFR/MEM,[address],[data],,,,,,
#,Access granularity [GPR: BURST bytes] [CFR: 2 bytes] [MEM: Burst bytes] where BURST = 32 bytes,,,,,,,,,
,,,,,,,,,,
#,Writing to GPR [0-1] for banks,,,,,,,,,
,W,GPR,0,-1,,,,,,
,W,GPR,32,-1,,,,,,
,,,,,,,,,,
#,Writing to GPR [2-3] for global buffers,,,,,,,,,
,W,GPR,64,-1,,,,,,
,W,GPR,96,-1,,,,,,
,,,,,,,,,,
#,Writing to GPR [4-7] for bias of channels[0-3],,,,,,,,,
,W,GPR,128,-1,,,,,,
,W,GPR,160,-1,,,,,,
,W,GPR,192,-1,,,,,,
,W,GPR,224,-1,,,,,,
,,,,,,,,,,
#,"Write [2-data = 512 bits] from GPR[0, 1] to channels [0-3] bank [0] row [0] col [0-1]",,,,,,,,,
,AiM,ISR_WR_SBK,2,0,-1,1,0,0,0,-1
,AiM,ISR_WR_SBK,2,0,-1,2,0,0,0,-1
,AiM,ISR_WR_SBK,2,0,-1,4,0,0,0,-1
,AiM,ISR_WR_SBK,2,0,-1,8,0,0,0,-1
,,,,,,,,,,
#,"Write [2-data = 512 bits] from GPR[2, 3] to channels [0-3] global buffers col [0-1]",,,,,,,,,
,AiM,ISR_WR_GB,2,2,-1,15,-1,-1,0,-1
,,,,,,,,,,
#,Write [4-data = 1024 bits] from GPR[4-7] to channels [0-3] * 16 MAC accumulators,,,,,,,,,
,AiM,ISR_WR_BIAS,4,4,-1,15,-1,-1,-1,0
,,,,,,,,,,
#,set CFR[mr13.broadcast at address 0x0010] to 1 (MAC from global buffer),,,,,,,,,
,W,CFR,0x0010,1,,,,,,
,,,,,,,,,,
#,"MAC operation between 2 columns of all banks in channels [0-3] with 2 columns of global buffer, write to thread 0",,,,,,,,,
,AiM,ISR_MAC_ABK,2,-1,-1,15,-1,0,0,0
,,,,,,,,,,
#,set CFR[mr13.broadcast at address 0x0010] to 0 (MAC from next bank),,,,,,,,,
,W,CFR,0x0010,0,,,,,,
,,,,,,,,,,
#,"MAC operation between 2 columns of half of the banks in channels [0-3] with 2 columns of the next banks, write to thread 0",,,,,,,,,
,AiM,ISR_MAC_ABK,2,-1,-1,15,-1,0,0,0
,,,,,,,,,,
#,set CFR[mr13.broadcast at address 0x0010] to 1 (MAC from global buffer),,,,,,,,,
,W,CFR,0x0010,1,,,,,,
,,,,,,,,,,
#,"MAC operation between 2 columns of bank [0] in channels [0-3] with 2 columns of global buffer, write to thread 1",,,,,,,,,
,AiM,ISR_MAC_SBK,2,-1,-1,15,0,0,0,1
,,,,,,,,,,
#,set CFR[mr13.broadcast at address 0x0010] to 0 (MAC from next bank),,,,,,,,,
,W,CFR,0x0010,0,,,,,,
,,,,,,,,,,
#,"MAC operation between 2 columns of bank [0] in channels [0-3] with 2 columns of the next banks, write to thread 1",,,,,,,,,
,AiM,ISR_MAC_SBK,2,-1,-1,15,0,0,0,1
,,,,,,,,,,
#,set CFR[mr14.ewmul_bg at address 0x0018] to 1 (EWMUL only 1 bankgroup),,,,,,,,,
,W,CFR,0x0018,1,,,,,,
,,,,,,,,,,
#,"ELMUL operation between 1 bank group, 2 columns of channels [0-3] with 2 columns of the next banks",,,,,,,,,
,AiM,ISR_EWMUL,2,-1,-1,15,0,0,0,-1
,,,,,,,,,,
#,set CFR[mr14.ewmul_bg at address 0x0018] to 0 (EWMUL in all bankgroups),,,,,,,,,
,W,CFR,0x0018,0,,,,,,
,,,,,,,,,,
#,"ELMUL operation between all bank groups, 2 columns of channels [0-3] with 2 columns of the next banks",,,,,,,,,
,AiM,ISR_EWMUL,2,-1,-1,15,0,0,0,-1
,,,,,,,,,,
#,set CFR[mr13.afm at address 0x001C] to 1 (AF number 1),,,,,,,,,
,W,CFR,0x001C,1,,,,,,
,,,,,,,,,,
#,"AF operation in all banks of channels [0-3], thread 0",,,,,,,,,
,AiM,ISR_AF,4,-1,-1,15,-1,-1,-1,0
,,,,,,,,,,
#,Reading MAC accumulators of thread 0 of all banks of channels [0-3] to GPRs[8-11],,,,,,,,,
,AiM,ISR_RD_MAC,4,8,-1,15,-1,-1,-1,0
,,,,,,,,,,
#,Reading MAC accumulators of thread 1 of all banks of channels [0-3] to GPRs[12-15],,,,,,,,,
,AiM,ISR_RD_MAC,4,12,-1,15,-1,-1,-1,1
,,,,,,,,,,
#,Reading AF results of all banks of channels [0-3] to GPRs[16-19],,,,,,,,,
,AiM,ISR_RD_AF,4,16,-1,15,-1,-1,-1,-1
,,,,,,,,,,
#,ELADD operation between GPRs[8-11] and GPRs[12-15],,,,,,,,,
,AiM,ISR_EWADD,4,8,12,-1,-1,-1,-1,-1
,,,,,,,,,,
#,Copying 2 columns from bank 0 row 0 col[0-1] in all channels to their global buffers col[0-1],,,,,,,,,
,AiM,ISR_COPY_BKGB,2,-1,-1,15,0,0,0,-1
,,,,,,,,,,
#,Copying 2 columns from global buffers col[0-1] to bank 0 row 0 col[0-1] in all channels,,,,,,,,,
,AiM,ISR_COPY_GBBK,2,-1,-1,15,0,0,0,-1
,,,,,,,,,,
#,Read [2-data = 512 bits] from channels [0-3] bank [0] row [0] col [0-1] to GPR[20-27],,,,,,,,,
,AiM,ISR_RD_SBK,2,20,-1,1,0,0,0,-1
,AiM,ISR_RD_SBK,2,22,-1,2,0,0,0,-1
,AiM,ISR_RD_SBK,2,24,-1,4,0,0,0,-1
,AiM,ISR_RD_SBK,2,26,-1,8,0,0,0,-1
,,,,,,,,,,
#,Finishing compute,,,,,,,,,
,AiM,ISR_EOC,-1,-1,-1,-1,-1,-1,-1,-1
,,,,,,,,,,
,,,,,,,,,,
,,,,,,,,,,
#,AiM,ISR_WR_AFLUT,,,,,,,,
